{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","Component","Register","onNameChange","particlesOptions","particles","number","enable","density","value_area","shape","polygon","nb_sides","line_linked","shadow","distance","color","blur","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8018c92f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.dc016cea.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n        if (isSignedIn) {\r\n            return (\r\n                <nav style= {{ display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n            );\r\n        } else {\r\n            return (\r\n                <nav style= {{ display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                    <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n                </nav>\r\n            );\r\n            \r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.png';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\">\r\n                    <img alt='brain logo'src={brain}></img>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React, { Fragment } from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <Fragment>\r\n            <p className='f3'>\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className=' form center pa4 br3 shadow-5'>\r\n                <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React, { Fragment } from 'react';\r\n\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n        <Fragment>\r\n            <div className='white f3'>\r\n            {`${name}, your current entry is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React, { Fragment } from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <Fragment>\r\n           <div className='center ma'>\r\n               <div className='absolute mt2'>\r\n                    <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n                    <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n                    {/* <div className=\"bounding-box\" style={‌{top: box.topRow, left: box.leftCol, right: box.rightCol, bottom: box.bottomRow}}> */}\r\n               </div>\r\n           </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value});\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n         return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\" \r\n                                name=\"email-address\"  \r\n                                id=\"email-address\" \r\n                                onChange={this.onEmailChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\"  \r\n                                id=\"password\" \r\n                                onChange={this.onPasswordChange}\r\n                            />\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input \r\n                            onClick = {this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                        <p onClick = {() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n        \r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n// import './SignIn.css';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n               <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"name\"  \r\n                            id=\"name\" \r\n                            onChange = {this.onNameChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\" \r\n                            onChange = {this.onEmailChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\" \r\n                            onChange = {this.onPasswordChange}\r\n                        />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                        onClick = {this.onSubmitSignIn}\r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Register\" />\r\n                    </div>\r\n                </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport 'tachyons';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      enable: true,\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    shape :{\n      polygon: {\n        nb_sides : 12\n      }\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        distance: 50,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      } \n    })\n  }\n  \n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            input: this.state.input\n        })\n      })\n    .then(response => response.json())\n    .then( response => {\n      if (response) {\n        fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}))\n        })\n        .catch(console.log)\n    }\n    this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' \n              params=\n              { particlesOptions }\n            />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n              route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n      );\n  }\n  \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}